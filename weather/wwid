import pandas as pd
import numpy as np

def calculate_z_stats_for_crr_groups(df, group_var='CRR_group', default_var='DEFAULT_EVENT'):
    # Sort CRR groups
    groups = sorted(df[group_var].unique())
    
    # Calculate default rate and variance for each group
    stats = []
    for group in groups:
        sub_df = df[df[group_var] == group]
        n = len(sub_df)
        dr = sub_df[default_var].mean()
        var = dr * (1 - dr) / n if n > 0 else np.nan
        stats.append({'group': group, 'n': n, 'dr': dr, 'var': var})

    stats_df = pd.DataFrame(stats)
    
    # Calculate Z statistics for adjacent groups
    z_stats = []
    for i in range(1, len(stats_df)):
        dr_i = stats_df.loc[i, 'dr']
        dr_prev = stats_df.loc[i - 1, 'dr']
        var_sum = stats_df.loc[i, 'var'] + stats_df.loc[i - 1, 'var']
        z = (dr_i - dr_prev) / np.sqrt(var_sum) if var_sum > 0 else np.nan
        z_stats.append({
            'Group i-1': stats_df.loc[i - 1, 'group'],
            'Group i': stats_df.loc[i, 'group'],
            'DR i-1': dr_prev,
            'DR i': dr_i,
            'Z-stat': z
        })

    return pd.DataFrame(z_stats)

# Example usage
z_results = calculate_z_stats_for_crr_groups(chc_df)
print(z_results)
