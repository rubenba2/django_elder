import numpy as np
import pandas as pd

def calculate_herfindahl_index_ECB(df, rating_var='CRR', default_threshold=7.1):
    # Step 1. Filter out default exposures.
    # Non-default exposures: ratings greater than or equal to default_threshold.
    non_default_df = df[df[rating_var] >= default_threshold]
    
    # Step 2. Calculate the relative frequencies of each rating grade.
    # Count exposures per grade.
    counts = non_default_df[rating_var].value_counts()
    
    # Total number of non-default observations.
    total = counts.sum()
    
    # Relative frequency for each rating grade
    R = counts / total
    
    # Step 3. K: number of distinct rating grades
    K = len(R)
    
    if K == 0:
        raise ValueError("No non-default exposures available to calculate HI.")
    
    # Step 4. Calculate the coefficient of variation (CV)
    # For an equally distributed case, each grade frequency would be 1/K.
    # Compute sum_{i=1}^{K} (R_i - 1/K)^2
    squared_diff = (R - 1/K) ** 2
    sum_squared_diff = squared_diff.sum()
    
    CV = np.sqrt(K * sum_squared_diff)
    
    # Step 5. Calculate the Herfindahl Index (HI)
    # Using: HI = 1 + log((CV^2 + 1)/K) / log(K)
    # (log here is natural logarithm, i.e. ln)
    HI = 1 + np.log((CV**2 + 1) / K) / np.log(K)
    
    return HI

# Example usage:
# Assuming chc_df is your DataFrame and CRR is the rating variable
herfindahl_index = calculate_herfindahl_index_ECB(chc_df, rating_var='CRR', default_threshold=7.1)
print(f"Herfindahl Index for non-default exposures (CRR >= 7.1): {herfindahl_index:.4f}")
