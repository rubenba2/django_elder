import pandas as pd
import numpy as np
import statsmodels.api as sm
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Titanic dataset from seaborn
titanic = sns.load_dataset('titanic')

# Drop rows with missing values for simplicity
titanic = titanic.dropna(subset=['age', 'fare', 'pclass', 'sex', 'sibsp', 'survived'])

# Define the independent variables (5 variables) and the dependent variable
X = titanic[['age', 'fare', 'pclass', 'sex', 'sibsp']]
X = pd.get_dummies(X, columns=['sex'], drop_first=True)  # Convert 'sex' to binary (male=1, female=0)
y = titanic['survived']

# Add a constant to the independent variables for the intercept
X = sm.add_constant(X)

# Initialize an array to store the bootstrapped coefficients
n_bootstraps = 1000
coefficients = np.zeros((n_bootstraps, X.shape[1]))

# Perform bootstrapping
for i in range(n_bootstraps):
    # Sample with replacement
    sample_indices = np.random.choice(X.index, size=len(X), replace=True)
    X_sample = X.loc[sample_indices]
    y_sample = y.loc[sample_indices]
    
    # Fit the logistic regression model
    model = sm.Logit(y_sample, X_sample).fit(disp=0)
    
    # Save the coefficients
    coefficients[i] = model.params

# Save the results to a DataFrame
results = pd.DataFrame(coefficients, columns=X.columns)

# Plot the distribution of the coefficients
plt.figure(figsize=(12, 8))
for i, column in enumerate(results.columns):
    plt.subplot(2, 3, i + 1)
    sns.histplot(results[column], kde=True)
    plt.title(f'Distribution of {column}')
    plt.xlabel('Coefficient Value')
    plt.ylabel('Frequency')

plt.tight_layout()
plt.show()

# Save the results to a CSV file
results.to_csv('bootstrap_results.csv', index=False)
