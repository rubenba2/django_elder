import pandas as pd
import numpy as np

def pai_variance_based(df_dev, df_app):
    results = []

    for col in df_dev.columns:
        if pd.api.types.is_numeric_dtype(df_dev[col]):
            xbar = df_dev[col].mean()
            n = len(df_dev[col])
            N = len(df_app[col])

            # Variance from dev and app around dev mean
            dev_var = ((df_dev[col] - xbar) ** 2).sum() / n
            app_var = ((df_app[col] - xbar) ** 2).sum() / N

            # Avoid divide by zero
            if dev_var == 0:
                pai = np.nan
            else:
                pai = 0.5 * (1 + app_var / dev_var)

            results.append({'Variable': col, 'PAI': round(pai, 4)})

        else:
            results.append({'Variable': col, 'PAI': 'N/A (categorical)'})

    return pd.DataFrame(results)

# üîß Sample data
df_dev = pd.DataFrame({
    'income': [30000, 35000, 40000, 45000, 50000],
    'region': ['north', 'south', 'north', 'west', 'east'],
    'account_type': ['A', 'B', 'A', 'C', 'B']
})

df_app = pd.DataFrame({
    'income': [32000, 37000, 39000, 47000, 51000],
    'region': ['north', 'north', 'west', 'west', 'south'],
    'account_type': ['B', 'B', 'A', 'C', 'A']
})

# üîç Calculate PAI
pai_results = pai_variance_based(df_dev, df_app)
print(pai_results)

